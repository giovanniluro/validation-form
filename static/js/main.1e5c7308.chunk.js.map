{"version":3,"sources":["pages/Main/style.ts","components/Form/style.ts","components/Form/index.tsx","components/Social/style.ts","components/Social/index.tsx","pages/Main/index.tsx","globalStyle.ts","index.tsx"],"names":["Container","styled","div","Header","Body","Content","props","newForm","css","transition","backwards","backwardAppear","forwardAppear","Progress","progress","Form","formProps","useState","name","setName","email","setEmail","password","setPassword","passwordConfirmation","setPasswordConfirmation","inputName","useRef","inputEmail","inputPassword","inputPasswordConfirmation","page","setPage","setTransition","setBackwards","setBackwardAppear","setForwardAppear","useEffect","handleSubmit","useCallback","e","preventDefault","console","log","err","current","classList","remove","length","add","split","handlePageTransition","animationName","handleDone","onAnimationEnd","onSubmit","ref","type","value","onChange","target","toUpperCase","slice","size","color","className","onClick","Social","href","Main","setNewForm","id","uuid","formData","setFormData","handleNewForm","createGlobalStyle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e5c7308.chunk.js","sourcesContent":["import styled, { css } from 'styled-components';\n\n//Pallete - https://coolors.co/0d1821-344966-b4cded-f0f4ef-bfcc94\n\ninterface ContentProps {\n  newForm: string;\n}\n\nexport const Container = styled.div`\n  height: 100%;\n  width: 100%;\n`\n\nexport const Header = styled.div`\n  background: #344966;\n  height: 20%;\n\n  /* Mobile */\n  @media(max-width: 450px) {\n    height: 15%;\n  }\n`\n\nexport const Body = styled.div`\n  background: #E8EEE7;\n  height: 80%;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  /* Mobile */\n  @media(max-width: 450px) {\n    height: 85%;\n  }\n`\n\nexport const Content = styled.div<ContentProps>`\n  background: white;\n  display: flex;\n  flex-direction: column;\n  max-height: 90%;\n  min-width: 70%;\n  margin-top: -40px;\n  box-shadow: 0 0 8px 4px rgba(0,0,0,0.3);\n  animation: popup .8s;\n  overflow: hidden;\n\n  ${props => props.newForm === 'true' && css `\n    animation: popdown .8s;\n  `}\n\n  /* Mobile */\n  @media(max-width: 450px) {\n    width: 90%;\n    overflow: hidden;\n    border-radius: 14px;\n  }\n\n  @keyframes popup {\n    from {\n      opacity: 0;\n      transform: translateY(50vh);\n    } 40% {\n      opacity: 1;\n      transform: translateY(-80px);\n    }\n    to {\n      transform: translateY(0);\n    }\n  }\n\n  @keyframes popdown {\n    from {\n      opacity: 1;\n      transform: translateY(0);\n    } 40% {\n      opacity: 1;\n      transform: translateY(-80px);\n    }\n    to {\n      opacity: 0;\n      transform: translateY(50vh);\n    }\n  }\n\n`","import styled, { css } from 'styled-components';\n\ninterface ContainerProps {\n  transition: string;\n  backwards: string;\n  backwardAppear: string;\n  forwardAppear: string;\n}\n\ninterface ProgressProps {\n  progress: number;\n}\n\nexport const Container = styled.div<ContainerProps>`\n  padding: 40px;\n  height: 98%;\n  width: 100%;\n  animation: none;\n  overflow: auto;\n  transition: .4s;\n\n  @media(max-width: 900px) and (max-height: 799px){\n    order: 2;\n  }\n\n\n  ${props => props.transition === 'true' && css`\n    animation: swipetoleft .3s forwards;\n  `}\n\n  ${props => props.backwards === 'true' && css`\n    animation: swipetoright .3s;\n  `}\n\n  ${props => props.backwardAppear === 'true' && css`\n    animation: swipefromleft .4s backwards;\n  `}\n\n  ${props => props.forwardAppear === 'true' && css`\n    animation: swipefromright .4s backwards;\n  `}\n\n\n  /* Mobile */\n  @media(max-width: 450px) {\n    padding: 40px 20px;\n\n    form {\n      h1{\n        font-size: 20px;\n      }\n      h2 {\n        font-size: 18px;\n      }\n\n      h4 {\n        font-size: 16px;\n      }\n      h3 {\n        font-size: 14px;\n      }\n    }\n  }\n\n  .thanks {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-around;\n\n    h2 {\n      text-align: center;\n      padding: 20px;\n      font-size: 16px;\n    }\n\n    > svg path{\n      stroke-dashoffset: 0;\n      stroke-dasharray: 100;\n      animation: iconshow 1.8s backwards ease-out;\n      animation-delay: .8s;\n      color: #344966;\n    }\n\n    > svg polyline {\n      stroke-dashoffset: 0;\n      stroke-dasharray: 100;\n      animation: iconshow 1s backwards linear;\n      animation-delay: 1.3s;\n      color: green;\n    }\n\n    > button {\n\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      padding: 10px 0;\n      background: #344966;\n      color: white;\n      font-weight: bold;\n      border: 0;\n      width: 40%;\n      bottom: 20px;\n      font-size: 18px;\n\n      &:focus {\n        outline: 0;\n      }\n\n      /* Mobile */\n      @media(max-width: 450px) {\n        width: 100%;\n      }\n    }\n  }\n\n  form {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    position: relative;\n\n    h4 {\n      text-align: justify;\n    }\n\n    h3 {\n      margin-top: 20px;\n      font-weight: 500;\n      text-align: justify;\n    }\n\n    label {\n      margin-top: 40px;\n      padding: 10px 4px;\n\n      > div {\n        display: flex;\n\n        input {\n          border: 0;\n          border-bottom: 3px solid #344966;\n          width: 80%;\n          padding: 10px 0;\n          transition: .3s;\n          font-size: 14px;\n\n          &:focus {\n            outline: 0;\n            transform: translateY(5px);\n          }\n        }\n\n        > div {\n          position: relative;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          margin-left: 20px;\n\n          svg {\n            display: none;\n          }\n\n          p {\n            display: none;\n            width: 250px;\n            align-items: center;\n            justify-content: center;\n            position: absolute;\n            bottom: 50px;\n            padding: 20px 10px;\n            border-radius: 12px;\n            background: #FF9C99;\n            font-weight: 600;\n            border: 2px solid #FF7570;\n\n          }\n        }\n\n        /* Mobile */\n        @media(max-width: 450px) {\n          input {\n            width: 100%;\n\n            &:focus {\n              width: 100%;\n              transform: translateY(3px);\n            }\n          }\n        }\n      }\n    }\n\n\n    .error {\n      > div {\n\n        input {\n          border-bottom: 2px solid #FF4E47;\n          animation: no-no .3s;\n        }\n        > div {\n          position: relative;\n\n          svg {\n            display: block;\n            animation: fall .8s;\n          }\n\n          &:hover {\n            p {\n              display: flex;\n              animation: fadein .4s;\n            }\n          }\n        }\n        @media(max-width: 450px) {\n          flex-direction: column;\n          position: relative;\n\n          > div {\n            position: absolute;\n            width: 100%;\n            margin: 0;\n            top: 50px;\n            justify-content: flex-start;\n\n            p {\n              position: relative;\n              display: inline-block;  \n              padding: 3px;\n              font-size: 12px;\n              bottom: 0;\n              flex: 1;\n              margin-left: 10px;\n              text-align: center;\n            }\n          }\n        }\n      }    \n    }\n\n    > button {\n\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      padding: 10px 0;\n      background: #344966;\n      color: white;\n      font-weight: bold;\n      border: 0;\n      width: 40%;\n      bottom: 20px;\n      margin-top: auto;\n\n      &:focus {\n        outline: 0;\n      }\n\n      /* Mobile */\n      @media(max-width: 450px) {\n        width: 100%;\n      }\n      \n    }\n\n    .buttons {\n      display: flex;\n      justify-content: space-between;\n      margin: auto 0;\n\n      button {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        padding: 10px 0;\n        background: #344966;\n        color: white;\n        font-weight: bold;\n        border: 0;\n        width: 40%;\n        justify-self: end;\n        bottom: 20px;\n        margin-top: auto;\n\n        &:focus {\n          outline: 0;\n        }\n      }\n    }\n  }\n\n  @keyframes no-no {\n    0% {\n      transform: translateX(0px);\n    }\n    25% {\n      transform: translateX(-10px);\n    }\n    50% {\n      transform: translateX(10px);\n    }\n    75% {\n      transform: translateX(-10px); \n    }\n    100% {\n      transform: translateX(0px);\n    } \n  }\n\n  @keyframes fadein {\n    from {\n      opacity: 0;\n    } to {\n      opacity: 1;\n    }\n  }\n\n  @keyframes fall {\n    0% {\n      opacity: 0;\n      transform: translateY(-80px);\n    }\n    60% {\n      transform: translateY(0);\n      opacity: 1;\n    }\n    70% {\n      transform: translateY(4px);\n    }\n    80% {\n      transform: translateY(0px); \n    }\n    90% {\n      transform: translateY(4px);\n    }  0% {\n      opacity: 0;\n      transform: translateY(-80px);\n    }\n    60% {\n      transform: translateY(0);\n      opacity: 1;\n    }\n    70% {\n      transform: translateY(4px);\n    }\n    80% {\n      transform: translateY(0px); \n    }\n    90% {\n      transform: translateY(4px);\n    }\n    100% {\n      transform: translateY(0);\n    }\n    100% {\n      transform: translateY(0);\n    }\n  }\n\n  @keyframes swipefromright {\n    from {\n      opacity: 0;\n      transform: translateX(50vh);\n    } to {\n      opacity: 1;\n      transform: translateX(0);\n    }\n  }\n\n  @keyframes swipefromleft {\n    from {\n      opacity: 0;\n      transform: translateX(-50vh);\n    } to {\n      opacity: 1;\n      transform: translateX(0);\n    }\n  }\n\n\n\n  @keyframes swipetoleft {\n    from {\n      opacity: 1;\n      transform: translateX(0);\n    } to {\n      opacity: 0;\n      transform: translateX(-50vh);\n    }\n  }\n\n  @keyframes swipetoright {\n    from {\n      opacity: 1;\n      transform: translateX(0);\n    } to {\n      opacity: 0;\n      transform: translateX(50vh);\n    }\n  }\n\n  @keyframes iconshow {\n    from{\n      stroke-dashoffset: 100;\n    }\n    to {\n      stroke-dashoffset: 0;\n    }\n  }\n`\n\nexport const Progress = styled.div<ProgressProps>`\n  \n  overflow: hidden;\n  width: ${props => props.progress * 33.4}%;\n  height: 2%;\n  transition: .6s;\n  background: #344966;\n\n  @media(max-width: 900px) and (max-height: 799px){\n    order: 1;\n  }\n`","import React, { useState, useRef, useCallback, useEffect } from 'react';\nimport { Container, Progress } from './style';\nimport { FiCheckCircle, FiAlertCircle, FiArrowRight, FiArrowLeft } from 'react-icons/fi';\nimport { MdInsertEmoticon } from 'react-icons/md';\n\n\ninterface FormProps {\n  newForm: (newForm: string) => void;\n  formProps: {\n    id: string;\n    name: string;\n    email: string;\n    password: string;\n    passwordConfirmation: string;\n    page: number;\n  }\n}\n\nconst Form: React.FC<FormProps> = ({ newForm, formProps }) => {\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirmation, setPasswordConfirmation] = useState('');\n  const inputName = useRef<HTMLLabelElement>(null);\n  const inputEmail = useRef<HTMLLabelElement>(null);\n  const inputPassword = useRef<HTMLLabelElement>(null);\n  const inputPasswordConfirmation = useRef<HTMLLabelElement>(null);\n  const [page, setPage] = useState(1);\n  const [transition, setTransition] = useState('false');\n  const [backwards, setBackwards] = useState('false');\n  const [backwardAppear, setBackwardAppear] = useState('false');\n  const [forwardAppear, setForwardAppear] = useState('true');\n\n  useEffect(() => {\n    setName(formProps.name);\n    setPassword(formProps.password);\n    setEmail(formProps.email);\n    setPage(formProps.page);\n    setPasswordConfirmation(formProps.passwordConfirmation);\n  }, [formProps]);\n\n\n//Submiting forms and validating each page\n  const handleSubmit = useCallback((e) => {\n    e.preventDefault();\n    console.log(e);\n    if (page === 1) {\n      let err = 0;\n      inputName.current?.classList.remove('error');\n      inputEmail.current?.classList.remove('error');\n\n      if (name.length === 0) {\n        inputName.current?.classList.add('error');\n        err++;\n      }\n\n      if (email.split('@').length !== 2) {\n        inputEmail.current?.classList.add('error');\n        err++;\n      } else if (email.split('@')[1].split('.').length < 2) {\n        inputEmail.current?.classList.add('error');\n        err++;\n      }\n\n      if (err === 0) {\n        setTransition('true');\n      }\n    }\n\n    if (page === 2) {\n      let err = 0;\n      inputPassword.current?.classList.remove('error');\n      inputPasswordConfirmation.current?.classList.remove('error');\n\n      if (password.length < 6) {\n        console.log(password.length);\n        inputPassword.current?.classList.add('error');\n        err++;\n      }\n\n      if (password !== passwordConfirmation) {\n        console.log(passwordConfirmation, password);\n        inputPasswordConfirmation.current?.classList.add('error');\n        err++;\n      }\n\n      if (err === 0) {\n        setTransition('true');\n      }\n    }\n\n\n  }, [name, email, page, password, passwordConfirmation]);\n\n//Page forward and backward transition\n  const handlePageTransition = useCallback((e) => {\n    if (e.animationName === 'swipetoleft') {\n      setTransition('false');\n      setForwardAppear('true');\n      setPage(page => page + 1);\n    }\n\n    if (e.animationName === 'swipetoright') {\n      setBackwards('false');\n      setBackwardAppear('true');\n      setPage(page => page - 1);\n    }\n\n    if (e.animationName === 'swipefromleft') {\n      setBackwardAppear('false');\n    }\n\n    if (e.animationName === 'swipefromright') {\n      setForwardAppear('false');\n    }\n  }, []);\n//Creating a new empty form when the current is done\n  const handleDone = useCallback(() => {\n    newForm('true');\n  }, [newForm]);\n\n  return (\n    <>\n      <Container forwardAppear={forwardAppear} backwardAppear={backwardAppear} backwards={backwards} transition={transition} onAnimationEnd={handlePageTransition}>\n        {page === 1 &&\n          <form onSubmit={handleSubmit}>\n            <h2>Bem vindo(a), vamos começar!</h2>\n\n            <label ref={inputName}>\n              <h4>Digite o seu nome:</h4>\n              <div>\n                <input type=\"text\" value={name} onChange={e => {\n                  if (e.target.value !== '') {\n                    setName(e.target.value[0].toUpperCase() + e.target.value.slice(1));\n                  } else {\n                    setName('');\n                  }\n                }} />\n                <div>\n                  <FiAlertCircle size={20} color=\"#FF4E47\" />\n                  <p>Este campo é obrigatório</p>\n                </div>\n              </div>\n            </label>\n\n            <label ref={inputEmail}>\n              <h4>Digite o seu E-mail:</h4>\n              <div>\n                <input type=\"text\" value={email} onChange={e => setEmail(e.target.value)} />\n                <div>\n                  <FiAlertCircle size={20} color=\"#FF4E47\" />\n                  <p>Insira um E-mail válido!</p>\n                </div>\n              </div>\n            </label>\n\n            <button type='submit' > Próximo <FiArrowRight size={30} /> </button>\n          </form>\n        }\n        {page === 2 &&\n          <form onSubmit={handleSubmit}>\n            <h2> Oi {name.split(' ')[0]}, que bom ver você aqui! <MdInsertEmoticon /></h2>\n            <h3> Agora precisamos de uma senha! Lembre-se, sua senha precisa ter no mínimo 6 dígitos</h3>\n\n            <label ref={inputPassword}>\n              <h4>Sua senha:</h4>\n              <div>\n                <input type='password' value={password} onChange={e => setPassword(e.target.value)} />\n                <div>\n                  <FiAlertCircle size={20} color=\"#FF4E47\" />\n                  <p>Sua senha deve ter no mínimo 6 dígitos!</p>\n                </div>\n              </div>\n            </label>\n\n            <label ref={inputPasswordConfirmation}>\n              <h4>Confirmação:</h4>\n              <div>\n                <input type='password' value={passwordConfirmation} onChange={e => setPasswordConfirmation(e.target.value)} />\n                <div>\n                  <FiAlertCircle size={20} color=\"#FF4E47\" />\n                  <p>As senhas devem ser iguais</p>\n                </div>\n              </div>\n            </label>\n\n            <div className=\"buttons\">\n              <button type=\"button\" onClick={() => setBackwards('true')}><FiArrowLeft size={30} />Anterior</button>\n              <button type=\"submit\"> Próximo <FiArrowRight size={30} /> </button>\n            </div>\n          </form>\n        }\n        {page === 3 &&\n          <div className=\"thanks\">\n            <FiCheckCircle size={150} />\n            <h2>Prontinho {name.split(' ')[0]}, o seu cadastro foi finalizado! ;)</h2>\n            <button onClick={handleDone}>Voltar</button>\n          </div>\n        }\n      </Container>\n      <Progress progress={page} />\n    </>\n  );\n\n}\n\nexport default Form;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  display: flex;\n  padding: 15px 20px;\n  justify-content: space-between;\n  color: #fff;\n\n  h2 {\n    font-weight: 500;\n    font-size: 18px;\n  }\n\n  > div {\n\n    a {\n      cursor: pointer;\n      text-decoration: none;\n      color: #fff;\n\n      &:hover svg{\n        transform: scale(1.15);\n      }\n    }\n\n    svg {\n      margin: 0px 15px;\n      transition: .3s;\n    }\n\n  }\n`","import React from 'react';\nimport { Container } from './style';\nimport { FaInstagram, FaLinkedin, FaGithub } from 'react-icons/fa';\n\nconst Social: React.FC = () => {\n  return (\n    <Container>\n      <h2>ValidationForm by Giovanni Luro</h2>\n      <div>\n        <a href=\"https://instagram.com/giovanniluro\" target=\"#\"><FaInstagram size={20} /></a>\n        <a href=\"https://linkedin.com/in/giovanniluro\" target=\"#\"><FaLinkedin size={20} /></a>\n        <a href=\"https://github.com/giovanniluro/validation-form\" target=\"#\"><FaGithub size={20} /></a>\n      </div>\n    </Container>\n  )\n}\n\nexport default Social;","import React, { useState, useCallback, useEffect } from 'react';\nimport { Container, Body, Header, Content } from './style';\nimport Form from '../../components/Form';\nimport { uuid } from 'uuidv4';\nimport Social from '../../components/Social';\n\ninterface FormData {\n  id: string;\n  name: string;\n  email: string;\n  password: string;\n  passwordConfirmation: string;\n  page: number;\n}\n\nconst Main: React.FC = () => {\n\n  const [newForm, setNewForm] = useState('false');\n  const [formData, setFormData] = useState<FormData>({\n    id: uuid(),\n    email: '',\n    name: '',\n    password: '',\n    passwordConfirmation: '',\n    page: 1\n  });\n\n  const handleNewForm = useCallback((e) => {\n\n    if (e.animationName === 'popdown') {\n      setFormData({\n        id: uuid(),\n        email: '',\n        name: '',\n        password: '',\n        passwordConfirmation: '',\n        page: 1\n      });\n\n      setNewForm('false');\n    }\n\n  }, [setFormData, setNewForm]);\n\n  useEffect(() => {\n    console.log(formData.page);\n  }, [formData]);\n\n  return (\n    <Container>\n      <Header>\n        <Social />\n      </Header>\n      <Body>\n        <Content newForm={newForm} onAnimationEnd={handleNewForm}>\n          <Form newForm={setNewForm} formProps={formData} />\n        </Content>\n      </Body>\n    </Container>\n  )\n}\n\nexport default Main;","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n\n  html {\n    \n    height: 800px;\n    width: 100%;\n\n    @media(min-width: 800px) and (min-height: 801px){\n      overflow: hidden;\n      height: 100%;\n      width: 100%;\n    }\n  }\n\n  body, #root {\n   height: 100%;\n   width: 100%;\n  }\n\n  * {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n    font-family: 'Mulish', sans-serif;\n  }\n\n  button {\n    cursor: pointer;\n  }\n\n`;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './pages/Main';\nimport GlobalStyle from './globalStyle';\n\nReactDOM.render(\n  <>\n    <GlobalStyle />\n    <Main />\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}