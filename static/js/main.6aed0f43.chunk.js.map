{"version":3,"sources":["pages/Main/style.ts","components/Form/style.ts","components/Form/index.tsx","pages/Main/index.tsx","globalStyle.ts","index.tsx"],"names":["Container","styled","div","Header","Body","Content","props","transition","css","Progress","progress","Form","useState","name","setName","email","setEmail","password","setPassword","passwordConfirmation","setPasswordConfirmation","inputName","useRef","inputEmail","inputPassword","inputPasswordConfirmation","page","setPage","setTransition","handleSubmit","useCallback","e","preventDefault","err","current","classList","remove","length","add","split","console","log","handlePageTransition","animationName","onAnimationEnd","onSubmit","ref","type","value","onChange","target","toUpperCase","slice","size","color","Main","createGlobalStyle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6aed0f43.chunk.js","sourcesContent":["import styled from 'styled-components';\n\n//Pallete - https://coolors.co/0d1821-344966-b4cded-f0f4ef-bfcc94\n\nexport const Container = styled.div`\n  height: 100%;\n  width: 100%;\n`\n\nexport const Header = styled.div`\n  background: #344966;\n  height: 30%;\n\n  /* Mobile */\n  @media(max-width: 450px) {\n    height: 15%;\n  }\n`\n\nexport const Body = styled.div`\n  background: #E8EEE7;\n  height: 70%;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  /* Mobile */\n  @media(max-width: 450px) {\n    height: 85%;\n  }\n`\n\nexport const Content = styled.div`\n  background: white;\n  max-height: 90%;\n  min-width: 40%;\n  margin-top: -40px;\n  box-shadow: 0 0 8px 4px rgba(0,0,0,0.3);\n  animation: popup .8s;\n  overflow: hidden;\n  \n  /* Mobile */\n  @media(max-width: 450px) {\n    width: 80%;\n    overflow: auto;\n  }\n\n  @keyframes popup {\n    from {\n      opacity: 0;\n      transform: translateY(50vh);\n    } 40% {\n      opacity: 1;\n      transform: translateY(-80px);\n    }\n    to {\n      transform: translateY(0);\n    }\n  }\n\n`","import styled, { css } from 'styled-components';\n\ninterface ContainerProps {\n  transition: string;\n}\n\ninterface ProgressProps {\n  progress: number;\n}\n\nexport const Container = styled.div<ContainerProps>`\n  padding: 40px;\n  height: 98%;\n  animation: swipefromright .4s backwards;\n  animation-delay: .8s;\n  overflow: auto;\n\n  ${props => props.transition==='true' && css`\n    animation: swipetoleft .2s forwards;\n  `}\n  /* Mobile */\n  @media(max-width: 450px) {\n    padding: 20px;\n\n    form {\n      h4 {\n        font-size: 18px;\n      }\n      h3 {\n        font-size: 16px;\n      }\n    }\n  }\n\n  form {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    position: relative;\n\n    h4 {\n      text-align: justify;\n    }\n\n    h3 {\n      margin-top: 20px;\n      font-weight: 500;\n      text-align: justify;\n    }\n\n    label {\n      margin-top: 40px;\n      padding: 10px 4px;\n\n      > div {\n        display: flex;\n\n        input {\n          border: 0;\n          border-bottom: 3px solid #344966;\n          width: 70%;\n          padding: 10px 0;\n          transition: .3s;\n          font-size: 14px;\n\n          &:focus {\n            outline: 0;\n            width: 80%;\n            transform: translateY(5px);\n          }\n        }\n\n        > div {\n          position: relative;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          margin-left: 20px;\n\n          svg {\n            display: none;\n          }\n\n          p {\n            display: none;\n            width: 250px;\n            align-items: center;\n            justify-content: center;\n            position: absolute;\n            bottom: 50px;\n            padding: 20px 10px;\n            border-radius: 12px;\n            background: #FF9C99;\n            font-weight: 600;\n            border: 2px solid #FF7570;\n\n          }\n        }\n\n        /* Mobile */\n        @media(max-width: 450px) {\n          input {\n            width: 100%;\n\n            &:focus {\n              width: 100%;\n              transform: translateY(3px);\n            }\n          }\n        }\n      }\n    }\n\n\n    .error {\n      > div {\n\n        input {\n          border-bottom: 2px solid #FF4E47;\n          animation: no-no .3s;\n        }\n        > div {\n          position: relative;\n\n          svg {\n            display: block;\n            animation: fall .8s;\n          }\n\n          &:hover {\n            p {\n              display: flex;\n              animation: fadein .4s;\n            }\n          }\n        }\n        @media(max-width: 450px) {\n          flex-direction: column;\n          position: relative;\n\n          > div {\n            position: absolute;\n            width: 100%;\n            margin: 0;\n            top: 50px;\n            justify-content: flex-start;\n\n            p {\n              position: relative;\n              display: inline-block;  \n              padding: 3px;\n              font-size: 12px;\n              bottom: 0;\n              flex: 1;\n              margin-left: 10px;\n              text-align: center;\n            }\n          }\n        }\n      }    \n    }\n\n    button {\n      padding: 20px 0;\n      background: #344966;\n      color: white;\n      font-weight: bold;\n      border: 0;\n      width: 40%;\n      justify-self: end;\n      bottom: 20px;\n      margin-top: auto;\n\n      &:focus {\n        outline: 0;\n      }\n\n      /* Mobile */\n      @media(max-width: 450px) {\n        width: 100%;\n      }\n      \n    }\n  }\n\n  @keyframes no-no {\n    0% {\n      transform: translateX(0px);\n    }\n    25% {\n      transform: translateX(-10px);\n    }\n    50% {\n      transform: translateX(10px);\n    }\n    75% {\n      transform: translateX(-10px); \n    }\n    100% {\n      transform: translateX(0px);\n    } \n  }\n\n  @keyframes fadein {\n    from {\n      opacity: 0;\n    } to {\n      opacity: 1;\n    }\n  }\n\n  @keyframes fall {\n    0% {\n      opacity: 0;\n      transform: translateY(-80px);\n    }\n    60% {\n      transform: translateY(0);\n      opacity: 1;\n    }\n    70% {\n      transform: translateY(4px);\n    }\n    80% {\n      transform: translateY(0px); \n    }\n    90% {\n      transform: translateY(4px);\n    }  0% {\n      opacity: 0;\n      transform: translateY(-80px);\n    }\n    60% {\n      transform: translateY(0);\n      opacity: 1;\n    }\n    70% {\n      transform: translateY(4px);\n    }\n    80% {\n      transform: translateY(0px); \n    }\n    90% {\n      transform: translateY(4px);\n    }\n    100% {\n      transform: translateY(0);\n    }\n    100% {\n      transform: translateY(0);\n    }\n  }\n\n  @keyframes swipefromright {\n    from {\n      opacity: 0;\n      transform: translateX(50vh);\n    } to {\n      opacity: 1;\n      transform: translateX(0);\n    }\n  }\n\n  @keyframes swipetoleft {\n    from {\n      opacity: 1;\n      transform: translateX(0);\n    } to {\n      opacity: 0;\n      transform: translateX(-50vh);\n    }\n  }\n`\n\nexport const Progress = styled.div<ProgressProps>`\n  \n  width: ${props =>props.progress*20}%;\n  height: 2%;\n  transition: .6s;\n  background: #344966;\n`","import React, { useState, useRef, useCallback } from 'react';\nimport { Container, Progress } from './style';\nimport { FiAlertCircle } from 'react-icons/fi';\nimport { MdInsertEmoticon } from 'react-icons/md';\n\n\nconst Form: React.FC = () => {\n\n  const [name, setName] = useState('Lucas');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirmation, setPasswordConfirmation] = useState('');\n  const inputName = useRef<HTMLLabelElement>(null);\n  const inputEmail = useRef<HTMLLabelElement>(null);\n  const inputPassword = useRef<HTMLLabelElement>(null);\n  const inputPasswordConfirmation = useRef<HTMLLabelElement>(null);\n  const [page, setPage] = useState(2);\n  const [transition, setTransition] = useState('false');\n\n  const handleSubmit = useCallback((e) => {\n    e.preventDefault();\n\n    if (page === 1) {\n      let err = 0;\n      inputName.current?.classList.remove('error');\n      inputEmail.current?.classList.remove('error');\n\n      if (name.length === 0) {\n        inputName.current?.classList.add('error');\n        err++;\n      }\n\n      if (email.split('@').length !== 2) {\n        inputEmail.current?.classList.add('error');\n        err++;\n      }\n\n      if (err === 0) {\n        setTransition('true');\n      }\n    }\n\n    if (page === 2) {\n      let err = 0;\n      inputPassword.current?.classList.remove('error');\n      inputPasswordConfirmation.current?.classList.remove('error');\n\n      if (password.length < 6) {\n        console.log(password.length);\n        inputPassword.current?.classList.add('error');\n        err++;\n      }\n\n      if (password !== passwordConfirmation) {\n        console.log(passwordConfirmation, password);\n        inputPasswordConfirmation.current?.classList.add('error');\n        err++;\n      }\n\n      if (err === 0) {\n        setTransition('true');\n      }\n    }\n\n\n  }, [name, email, page, password, passwordConfirmation]);\n\n  const handlePageTransition = useCallback((e) => {\n    if (e.animationName === 'swipetoleft') {\n      setTransition('false');\n      setPage(page => page + 1);\n    }\n  }, []);\n\n  return (\n    <>\n      <Container transition={transition} onAnimationEnd={handlePageTransition}>\n        {page === 1 &&\n          <form onSubmit={handleSubmit}>\n            <h2>Bem vindo(a), vamos começar!</h2>\n\n            <label ref={inputName}>\n              <h4>Digite o seu nome:</h4>\n              <div>\n                <input type=\"text\" value={name} onChange={e => {\n                  if (e.target.value !== '') {\n                    setName(e.target.value[0].toUpperCase() + e.target.value.slice(1));\n                  } else {\n                    setName('');\n                  }\n                }} />\n                <div>\n                  <FiAlertCircle size={20} color=\"#FF4E47\" />\n                  <p>Este campo é obrigatório</p>\n                </div>\n              </div>\n            </label>\n\n            <label ref={inputEmail}>\n              <h4>Digite o seu E-mail:</h4>\n              <div>\n                <input type=\"text\" value={email} onChange={e => setEmail(e.target.value)} />\n                <div>\n                  <FiAlertCircle size={20} color=\"#FF4E47\" />\n                  <p>Insira um E-mail válido!</p>\n                </div>\n              </div>\n            </label>\n\n            <button type='submit' > Próximo </button>\n          </form>\n        }\n        {page === 2 &&\n          <form onSubmit={handleSubmit}>\n            <h2> Oi {name.split(' ')[0]}, que bom ver você aqui! <MdInsertEmoticon /></h2>\n            <h3> Agora precisamos de uma senha! Lembre-se, sua senha precisa ter no mínimo 6 dígitos</h3>\n\n            <label ref={inputPassword}>\n              <h4>Sua senha:</h4>\n              <div>\n                <input type='password' value={password} onChange={e => setPassword(e.target.value)}/>\n                <div>\n                  <FiAlertCircle size={20} color=\"#FF4E47\" />\n                  <p>Sua senha deve ter no mínimo 6 dígitos!</p>\n                </div>\n              </div>\n            </label>\n\n            <label ref={inputPasswordConfirmation}>\n              <h4>Sua senha:</h4>\n              <div>\n                <input type='password' value={passwordConfirmation} onChange={e => setPasswordConfirmation(e.target.value)} />\n                <div>\n                  <FiAlertCircle size={20} color=\"#FF4E47\" />\n                  <p>As senhas devem ser iguais</p>\n                </div>\n              </div>\n            </label>\n\n            <button> Próximo </button>\n          </form>\n        }\n      </Container>\n      <Progress progress={page} />\n    </>\n  );\n\n}\n\nexport default Form;","import React from 'react';\nimport { Container, Body, Header, Content } from './style';\nimport Form from '../../components/Form';\n\nconst Main: React.FC = () => {\n\n  return(\n    <Container>\n      <Header>\n\n      </Header>\n      <Body>\n        <Content>\n          <Form />\n        </Content>\n      </Body>\n    </Container>\n  )\n}\n\nexport default Main;","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n\n  html {\n\n    height: 130%;\n    width: 100%;\n\n    @media(min-width: 1000px){\n      overflow: hidden;\n      height: 100%;\n      width: 100%;\n    }\n  }\n\n  body, #root {\n   height: 100%;\n   width: 100%;\n  }\n\n  * {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n    font-family: 'Mulish', sans-serif;\n  }\n\n`;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './pages/Main';\nimport GlobalStyle from './globalStyle';\n\nReactDOM.render(\n  <>\n    <GlobalStyle />\n    <Main />\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}